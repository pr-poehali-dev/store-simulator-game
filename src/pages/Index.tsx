import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
interface Product {
  id: string;
  name: string;
  category: 'vegetables' | 'fruits' | 'electronics' | 'cars';
  buyPrice: number;
  sellPrice: number;
  stock: number;
  image: string;
  description: string;
  unlocked: boolean;
}

interface Quest {
  id: string;
  title: string;
  description: string;
  requirement: number;
  reward: number;
  type: 'sales' | 'revenue' | 'purchase';
  isVip: boolean;
  completed: boolean;
}

interface GameStats {
  totalSales: number;
  totalRevenue: number;
  currentLevel: number;
  money: number;
  himCoins: number;
  experience: number;
  hasVipSubscription: boolean;
  hasUltraSubscription: boolean;
  vipExpiresAt: number;
  ultraExpiresAt: number;
  totalPurchases: number;
}

interface Subscription {
  name: string;
  price: number;
  duration: number;
  benefits: string[];
  icon: string;
}

// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
const VEGETABLES: Product[] = [
  { id: 'v1', name: '–ü–æ–º–∏–¥–æ—Ä—ã', category: 'vegetables', buyPrice: 50, sellPrice: 80, stock: 20, image: 'üçÖ', description: '–°–≤–µ–∂–∏–µ –∫—Ä–∞—Å–Ω—ã–µ –ø–æ–º–∏–¥–æ—Ä—ã', unlocked: true },
  { id: 'v2', name: '–û–≥—É—Ä—Ü—ã', category: 'vegetables', buyPrice: 40, sellPrice: 65, stock: 25, image: 'ü•í', description: '–•—Ä—É—Å—Ç—è—â–∏–µ –∑–µ–ª–µ–Ω—ã–µ –æ–≥—É—Ä—Ü—ã', unlocked: true },
  { id: 'v3', name: '–ú–æ—Ä–∫–æ–≤—å', category: 'vegetables', buyPrice: 30, sellPrice: 50, stock: 30, image: 'ü•ï', description: '–°–ª–∞–¥–∫–∞—è –æ—Ä–∞–Ω–∂–µ–≤–∞—è –º–æ—Ä–∫–æ–≤—å', unlocked: true },
  { id: 'v4', name: '–ö–∞–ø—É—Å—Ç–∞', category: 'vegetables', buyPrice: 35, sellPrice: 55, stock: 15, image: 'ü•¨', description: '–ë–µ–ª–æ–∫–æ—á–∞–Ω–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞', unlocked: true },
  { id: 'v5', name: '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å', category: 'vegetables', buyPrice: 25, sellPrice: 40, stock: 50, image: 'ü•î', description: '–ú–æ–ª–æ–¥–æ–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å', unlocked: true },
  { id: 'v6', name: '–õ—É–∫', category: 'vegetables', buyPrice: 20, sellPrice: 35, stock: 40, image: 'üßÖ', description: '–†–µ–ø—á–∞—Ç—ã–π –ª—É–∫', unlocked: true },
  { id: 'v7', name: '–ü–µ—Ä–µ—Ü', category: 'vegetables', buyPrice: 60, sellPrice: 95, stock: 18, image: 'üå∂Ô∏è', description: '–ë–æ–ª–≥–∞—Ä—Å–∫–∏–π –ø–µ—Ä–µ—Ü', unlocked: true },
  { id: 'v8', name: '–ë–∞–∫–ª–∞–∂–∞–Ω—ã', category: 'vegetables', buyPrice: 70, sellPrice: 110, stock: 12, image: 'üçÜ', description: '–§–∏–æ–ª–µ—Ç–æ–≤—ã–µ –±–∞–∫–ª–∞–∂–∞–Ω—ã', unlocked: true },
  { id: 'v9', name: '–ö–∞–±–∞—á–∫–∏', category: 'vegetables', buyPrice: 45, sellPrice: 70, stock: 22, image: 'ü•í', description: '–ú–æ–ª–æ–¥—ã–µ –∫–∞–±–∞—á–∫–∏', unlocked: true },
  { id: 'v10', name: '–°–≤–µ–∫–ª–∞', category: 'vegetables', buyPrice: 35, sellPrice: 55, stock: 28, image: 'üç†', description: '–°–ª–∞–¥–∫–∞—è –∫—Ä–∞—Å–Ω–∞—è —Å–≤–µ–∫–ª–∞', unlocked: true },
];

const FRUITS: Product[] = [
  { id: 'f1', name: '–Ø–±–ª–æ–∫–∏', category: 'fruits', buyPrice: 60, sellPrice: 90, stock: 30, image: 'üçé', description: '–°–æ—á–Ω—ã–µ –∫—Ä–∞—Å–Ω—ã–µ —è–±–ª–æ–∫–∏', unlocked: true },
  { id: 'f2', name: '–ë–∞–Ω–∞–Ω—ã', category: 'fruits', buyPrice: 80, sellPrice: 120, stock: 25, image: 'üçå', description: '–°–ø–µ–ª—ã–µ –∂–µ–ª—Ç—ã–µ –±–∞–Ω–∞–Ω—ã', unlocked: true },
  { id: 'f3', name: '–ê–ø–µ–ª—å—Å–∏–Ω—ã', category: 'fruits', buyPrice: 70, sellPrice: 105, stock: 20, image: 'üçä', description: '–°–ª–∞–¥–∫–∏–µ –∞–ø–µ–ª—å—Å–∏–Ω—ã', unlocked: true },
  { id: 'f4', name: '–ì—Ä—É—à–∏', category: 'fruits', buyPrice: 65, sellPrice: 95, stock: 18, image: 'üçê', description: '–°–æ—á–Ω—ã–µ –≥—Ä—É—à–∏', unlocked: true },
  { id: 'f5', name: '–í–∏–Ω–æ–≥—Ä–∞–¥', category: 'fruits', buyPrice: 120, sellPrice: 180, stock: 15, image: 'üçá', description: '–ö–∏—Å–ª–æ-—Å–ª–∞–¥–∫–∏–π –≤–∏–Ω–æ–≥—Ä–∞–¥', unlocked: true },
  { id: 'f6', name: '–ö–∏–≤–∏', category: 'fruits', buyPrice: 100, sellPrice: 150, stock: 12, image: 'ü•ù', description: '–≠–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ –∫–∏–≤–∏', unlocked: true },
  { id: 'f7', name: '–ú–∞–Ω–≥–æ', category: 'fruits', buyPrice: 200, sellPrice: 280, stock: 8, image: 'ü•≠', description: '–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–µ –º–∞–Ω–≥–æ', unlocked: true },
  { id: 'f8', name: '–ê–Ω–∞–Ω–∞—Å—ã', category: 'fruits', buyPrice: 250, sellPrice: 350, stock: 6, image: 'üçç', description: '–°–ª–∞–¥–∫–∏–µ –∞–Ω–∞–Ω–∞—Å—ã', unlocked: true },
  { id: 'f9', name: '–ü–µ—Ä—Å–∏–∫–∏', category: 'fruits', buyPrice: 90, sellPrice: 135, stock: 16, image: 'üçë', description: '–ù–µ–∂–Ω—ã–µ –ø–µ—Ä—Å–∏–∫–∏', unlocked: true },
  { id: 'f10', name: '–ö–ª—É–±–Ω–∏–∫–∞', category: 'fruits', buyPrice: 150, sellPrice: 220, stock: 10, image: 'üçì', description: '–°–ª–∞–¥–∫–∞—è –∫–ª—É–±–Ω–∏–∫–∞', unlocked: true },
  { id: 'f11', name: '–ê—Ä–±—É–∑', category: 'fruits', buyPrice: 80, sellPrice: 120, stock: 8, image: 'üçâ', description: '–°–æ—á–Ω—ã–π –∞—Ä–±—É–∑', unlocked: true },
  { id: 'f12', name: '–õ–∏–º–æ–Ω—ã', category: 'fruits', buyPrice: 55, sellPrice: 85, stock: 20, image: 'üçã', description: '–ö–∏—Å–ª—ã–µ –ª–∏–º–æ–Ω—ã', unlocked: true },
];

const ELECTRONICS: Product[] = [
  { id: 'e1', name: 'iPhone 15', category: 'electronics', buyPrice: 80000, sellPrice: 95000, stock: 5, image: 'üì±', description: '–ù–æ–≤–µ–π—à–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Apple', unlocked: false },
  { id: 'e2', name: 'Samsung Galaxy S24', category: 'electronics', buyPrice: 75000, sellPrice: 88000, stock: 4, image: 'üì±', description: '–§–ª–∞–≥–º–∞–Ω Samsung', unlocked: false },
  { id: 'e3', name: 'MacBook Pro', category: 'electronics', buyPrice: 150000, sellPrice: 175000, stock: 2, image: 'üíª', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –Ω–æ—É—Ç–±—É–∫', unlocked: false },
  { id: 'e4', name: 'iPad Air', category: 'electronics', buyPrice: 60000, sellPrice: 72000, stock: 6, image: 'üìü', description: '–ü–ª–∞–Ω—à–µ—Ç –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞', unlocked: false },
  { id: 'e5', name: 'AirPods Pro', category: 'electronics', buyPrice: 25000, sellPrice: 30000, stock: 10, image: 'üéß', description: '–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏', unlocked: false },
  { id: 'e6', name: 'PlayStation 5', category: 'electronics', buyPrice: 50000, sellPrice: 60000, stock: 3, image: 'üéÆ', description: '–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å Sony', unlocked: false },
  { id: 'e7', name: 'Nintendo Switch', category: 'electronics', buyPrice: 30000, sellPrice: 36000, stock: 7, image: 'üéÆ', description: '–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å', unlocked: false },
  { id: 'e8', name: 'Apple Watch', category: 'electronics', buyPrice: 35000, sellPrice: 42000, stock: 8, image: '‚åö', description: '–£–º–Ω—ã–µ —á–∞—Å—ã Apple', unlocked: false },
  { id: 'e9', name: 'Samsung TV 4K', category: 'electronics', buyPrice: 100000, sellPrice: 120000, stock: 2, image: 'üì∫', description: '65" Smart TV', unlocked: false },
  { id: 'e10', name: 'Dyson V15', category: 'electronics', buyPrice: 45000, sellPrice: 54000, stock: 4, image: 'üîå', description: '–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π –ø—ã–ª–µ—Å–æ—Å', unlocked: false },
  { id: 'e11', name: 'iPhone 15 Pro Max', category: 'electronics', buyPrice: 130000, sellPrice: 150000, stock: 3, image: 'üì±', description: '–¢–æ–ø–æ–≤—ã–π iPhone', unlocked: false },
  { id: 'e12', name: 'Meta Quest 3', category: 'electronics', buyPrice: 60000, sellPrice: 75000, stock: 5, image: 'ü•Ω', description: 'VR –≥–∞—Ä–Ω–∏—Ç—É—Ä–∞', unlocked: false },
  { id: 'e13', name: 'Steam Deck OLED', category: 'electronics', buyPrice: 50000, sellPrice: 60000, stock: 4, image: 'üéÆ', description: '–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å', unlocked: false },
  { id: 'e14', name: 'Canon EOS R5', category: 'electronics', buyPrice: 300000, sellPrice: 350000, stock: 1, image: 'üì∑', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞', unlocked: false },
  { id: 'e15', name: 'Tesla Model S', category: 'electronics', buyPrice: 8000000, sellPrice: 9500000, stock: 1, image: 'üöó', description: '–≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å –ø—Ä–µ–º–∏—É–º', unlocked: false },
  // –î–æ–±–∞–≤–ª–µ–Ω–æ 35+ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Ç–µ—Ö–Ω–∏–∫–∏
  { id: 'e16', name: 'Xbox Series X', category: 'electronics', buyPrice: 50000, sellPrice: 60000, stock: 4, image: 'üéÆ', description: '–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å Microsoft', unlocked: false },
  { id: 'e17', name: 'AirPods Max', category: 'electronics', buyPrice: 60000, sellPrice: 72000, stock: 4, image: 'üéß', description: '–ü—Ä–µ–º–∏—É–º –Ω–∞—É—à–Ω–∏–∫–∏ Apple', unlocked: false },
  { id: 'e18', name: 'iMac 24" M3', category: 'electronics', buyPrice: 150000, sellPrice: 180000, stock: 2, image: 'üñ•Ô∏è', description: '–ú–æ–Ω–æ–±–ª–æ–∫ Apple', unlocked: false },
  { id: 'e19', name: 'Sony A7R V', category: 'electronics', buyPrice: 400000, sellPrice: 480000, stock: 1, image: 'üì∑', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞ Sony', unlocked: false },
  { id: 'e20', name: 'Nintendo Switch OLED', category: 'electronics', buyPrice: 35000, sellPrice: 42000, stock: 6, image: 'üéÆ', description: '–£–ª—É—á—à–µ–Ω–Ω–∞—è Switch', unlocked: false },
  { id: 'e21', name: 'Tesla Model 3', category: 'electronics', buyPrice: 4000000, sellPrice: 4800000, stock: 1, image: 'üöó', description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —ç–ª–µ–∫—Ç—Ä–æ–∫–∞—Ä', unlocked: false },
  { id: 'e22', name: 'Mac Studio', category: 'electronics', buyPrice: 250000, sellPrice: 300000, stock: 2, image: 'üíª', description: '–ú–æ—â–Ω—ã–π Mac –¥–ª—è –ø—Ä–æ—Ñ–∏', unlocked: false },
  { id: 'e23', name: 'LG OLED C3 55"', category: 'electronics', buyPrice: 150000, sellPrice: 180000, stock: 2, image: 'üì∫', description: 'OLED —Ç–µ–ª–µ–≤–∏–∑–æ—Ä LG', unlocked: false },
  { id: 'e24', name: 'Framework Laptop', category: 'electronics', buyPrice: 100000, sellPrice: 120000, stock: 3, image: 'üíª', description: '–ú–æ–¥—É–ª—å–Ω—ã–π –Ω–æ—É—Ç–±—É–∫', unlocked: false },
  { id: 'e25', name: 'Steam Controller', category: 'electronics', buyPrice: 8000, sellPrice: 10000, stock: 20, image: 'üéÆ', description: '–ì–µ–π–º–ø–∞–¥ Steam', unlocked: false },
  { id: 'e26', name: 'Razer Blade 15', category: 'electronics', buyPrice: 200000, sellPrice: 240000, stock: 2, image: 'üíª', description: '–ò–≥—Ä–æ–≤–æ–π –Ω–æ—É—Ç–±—É–∫', unlocked: false },
  { id: 'e27', name: 'Elgato Stream Deck', category: 'electronics', buyPrice: 15000, sellPrice: 18000, stock: 8, image: 'üéõÔ∏è', description: '–ü–∞–Ω–µ–ª—å –¥–ª—è —Å—Ç—Ä–∏–º–µ—Ä–æ–≤', unlocked: false },
  { id: 'e28', name: 'Asus ROG Phone 8', category: 'electronics', buyPrice: 80000, sellPrice: 96000, stock: 3, image: 'üì±', description: '–ò–≥—Ä–æ–≤–æ–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω', unlocked: false },
  { id: 'e29', name: 'Valve Index VR Kit', category: 'electronics', buyPrice: 120000, sellPrice: 144000, stock: 2, image: 'ü•Ω', description: 'VR —Å–∏—Å—Ç–µ–º–∞ Valve', unlocked: false },
  { id: 'e30', name: 'DJI Air 3', category: 'electronics', buyPrice: 120000, sellPrice: 140000, stock: 2, image: 'üöÅ', description: '–î—Ä–æ–Ω —Å 4K –∫–∞–º–µ—Ä–æ–π', unlocked: false },
  { id: 'e31', name: 'Rolex Submariner', category: 'electronics', buyPrice: 1200000, sellPrice: 1500000, stock: 1, image: '‚åö', description: '–®–≤–µ–π—Ü–∞—Ä—Å–∫–∏–µ —á–∞—Å—ã', unlocked: false },
  { id: 'e32', name: 'MacBook Pro M3 Max', category: 'electronics', buyPrice: 400000, sellPrice: 480000, stock: 2, image: 'üíª', description: '–¢–æ–ø–æ–≤—ã–π –Ω–æ—É—Ç–±—É–∫ Apple', unlocked: false },
  { id: 'e33', name: 'Samsung QLED 85"', category: 'electronics', buyPrice: 500000, sellPrice: 600000, stock: 1, image: 'üì∫', description: '–û–≥—Ä–æ–º–Ω—ã–π Smart TV', unlocked: false },
  { id: 'e34', name: 'Bose QuietComfort', category: 'electronics', buyPrice: 35000, sellPrice: 42000, stock: 8, image: 'üéß', description: '–ù–∞—É—à–Ω–∏–∫–∏ —Å —à—É–º–æ–¥–∞–≤–æ–º', unlocked: false },
  { id: 'e35', name: 'Microsoft Surface Pro', category: 'electronics', buyPrice: 100000, sellPrice: 120000, stock: 3, image: 'üíª', description: '–ü–ª–∞–Ω—à–µ—Ç-–Ω–æ—É—Ç–±—É–∫', unlocked: false },
  { id: 'e36', name: 'GoPro Hero 12', category: 'electronics', buyPrice: 45000, sellPrice: 54000, stock: 6, image: 'üìπ', description: '–≠–∫—à–Ω-–∫–∞–º–µ—Ä–∞', unlocked: false },
  { id: 'e37', name: 'HomePod', category: 'electronics', buyPrice: 30000, sellPrice: 36000, stock: 5, image: 'üîä', description: '–£–º–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ Apple', unlocked: false },
  { id: 'e38', name: 'Kindle Oasis', category: 'electronics', buyPrice: 25000, sellPrice: 30000, stock: 10, image: 'üìñ', description: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞', unlocked: false },
  { id: 'e39', name: 'Ring Doorbell Pro', category: 'electronics', buyPrice: 20000, sellPrice: 25000, stock: 8, image: 'üîî', description: '–£–º–Ω—ã–π –¥–≤–µ—Ä–Ω–æ–π –∑–≤–æ–Ω–æ–∫', unlocked: false },
  { id: 'e40', name: 'Sonos Arc', category: 'electronics', buyPrice: 80000, sellPrice: 95000, stock: 3, image: 'üîä', description: '–°–∞—É–Ω–¥–±–∞—Ä –ø—Ä–µ–º–∏—É–º', unlocked: false },
  { id: 'e41', name: 'Apple Studio Display', category: 'electronics', buyPrice: 180000, sellPrice: 210000, stock: 2, image: 'üñ•Ô∏è', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä', unlocked: false },
  { id: 'e42', name: 'AirTag 4-pack', category: 'electronics', buyPrice: 12000, sellPrice: 15000, stock: 15, image: 'üè∑Ô∏è', description: '–¢—Ä–µ–∫–µ—Ä—ã Apple', unlocked: false },
  { id: 'e43', name: 'Tesla Cybertruck', category: 'electronics', buyPrice: 6000000, sellPrice: 7200000, stock: 1, image: 'üöõ', description: '–≠–ª–µ–∫—Ç—Ä–æ–ø–∏–∫–∞–ø –±—É–¥—É—â–µ–≥–æ', unlocked: false },
  { id: 'e44', name: 'Magic Keyboard', category: 'electronics', buyPrice: 35000, sellPrice: 42000, stock: 8, image: '‚å®Ô∏è', description: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è iPad', unlocked: false },
  { id: 'e45', name: 'Apple Pencil Pro', category: 'electronics', buyPrice: 15000, sellPrice: 18000, stock: 12, image: '‚úèÔ∏è', description: '–°—Ç–∏–ª—É—Å –¥–ª—è iPad', unlocked: false },
  { id: 'e46', name: 'Dyson Airwrap', category: 'electronics', buyPrice: 50000, sellPrice: 60000, stock: 4, image: 'üí®', description: '–°—Ç–∞–π–ª–µ—Ä –¥–ª—è –≤–æ–ª–æ—Å', unlocked: false },
  { id: 'e47', name: 'Philips Hue Starter Kit', category: 'electronics', buyPrice: 15000, sellPrice: 18000, stock: 10, image: 'üí°', description: '–£–º–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ', unlocked: false },
  { id: 'e48', name: 'Oculus Rift S', category: 'electronics', buyPrice: 40000, sellPrice: 48000, stock: 3, image: 'ü•Ω', description: 'VR –≥–∞—Ä–Ω–∏—Ç—É—Ä–∞ –¥–ª—è –ü–ö', unlocked: false },
  { id: 'e49', name: 'Surface Studio', category: 'electronics', buyPrice: 350000, sellPrice: 420000, stock: 1, image: 'üñ•Ô∏è', description: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä', unlocked: false },
  { id: 'e50', name: 'iPad Pro 12.9"', category: 'electronics', buyPrice: 120000, sellPrice: 140000, stock: 3, image: 'üì±', description: '–ë–æ–ª—å—à–æ–π iPad Pro', unlocked: false }
];

const CARS: Product[] = [
  { id: 'c1', name: 'Toyota Camry', category: 'cars', buyPrice: 800000, sellPrice: 950000, stock: 0, image: 'üöó', description: '–°–µ–¥–∞–Ω –ø–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞', unlocked: false },
  { id: 'c2', name: 'BMW X5', category: 'cars', buyPrice: 1500000, sellPrice: 1800000, stock: 0, image: 'üöô', description: '–ö—Ä–æ—Å—Å–æ–≤–µ—Ä –ø–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞', unlocked: false },
  { id: 'c3', name: 'Mercedes E-Class', category: 'cars', buyPrice: 1200000, sellPrice: 1450000, stock: 0, image: 'üöó', description: '–ë–∏–∑–Ω–µ—Å-—Å–µ–¥–∞–Ω –ø–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞', unlocked: false },
  { id: 'c4', name: 'Audi Q7', category: 'cars', buyPrice: 1800000, sellPrice: 2100000, stock: 0, image: 'üöô', description: '–ü—Ä–µ–º–∏—É–º –∫—Ä–æ—Å—Å–æ–≤–µ—Ä', unlocked: false },
  { id: 'c5', name: 'Ford Focus', category: 'cars', buyPrice: 600000, sellPrice: 720000, stock: 0, image: 'üöó', description: '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Å–µ–¥–∞–Ω', unlocked: false },
  { id: 'c6', name: 'Hyundai Tucson', category: 'cars', buyPrice: 1000000, sellPrice: 1200000, stock: 0, image: 'üöô', description: '–ö—Ä–æ—Å—Å–æ–≤–µ—Ä Hyundai', unlocked: false },
  { id: 'c7', name: 'Volkswagen Tiguan', category: 'cars', buyPrice: 1300000, sellPrice: 1560000, stock: 0, image: 'üöô', description: '–ù–µ–º–µ—Ü–∫–∏–π –∫—Ä–æ—Å—Å–æ–≤–µ—Ä', unlocked: false },
  { id: 'c8', name: 'Honda Civic', category: 'cars', buyPrice: 700000, sellPrice: 840000, stock: 0, image: 'üöó', description: '–ù–∞–¥–µ–∂–Ω—ã–π —Å–µ–¥–∞–Ω', unlocked: false },
];

const QUESTS: Quest[] = [
  // –û–±—ã—á–Ω—ã–µ –∫–≤–µ—Å—Ç—ã
  { id: 'q1', title: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏', description: '–ü—Ä–æ–¥–∞—Ç—å 5 —Ç–æ–≤–∞—Ä–æ–≤', requirement: 5, reward: 50, type: 'sales', isVip: false, completed: false },
  { id: 'q2', title: '–¢–æ—Ä–≥–æ–≤–µ—Ü', description: '–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å 5000‚ÇΩ', requirement: 5000, reward: 75, type: 'revenue', isVip: false, completed: false },
  { id: 'q3', title: '–ò–Ω–≤–µ—Å—Ç–æ—Ä', description: '–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –Ω–∞ 10000‚ÇΩ', requirement: 10000, reward: 100, type: 'purchase', isVip: false, completed: false },
  { id: 'q4', title: '–ë–æ–ª—å—à–æ–π —Ç–æ—Ä–≥–æ–≤–µ—Ü', description: '–ü—Ä–æ–¥–∞—Ç—å 25 —Ç–æ–≤–∞—Ä–æ–≤', requirement: 25, reward: 150, type: 'sales', isVip: false, completed: false },
  
  // VIP –∫–≤–µ—Å—Ç—ã
  { id: 'vq1', title: 'VIP –ü—Ä–æ–¥–∞–∂–∏', description: '–ü—Ä–æ–¥–∞—Ç—å 50 —Ç–æ–≤–∞—Ä–æ–≤', requirement: 50, reward: 100, type: 'sales', isVip: true, completed: false },
  { id: 'vq2', title: 'VIP –î–æ—Ö–æ–¥', description: '–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å 50000‚ÇΩ', requirement: 50000, reward: 100, type: 'revenue', isVip: true, completed: false },
  { id: 'vq3', title: 'VIP –ó–∞–∫—É–ø–∫–∏', description: '–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –Ω–∞ 75000‚ÇΩ', requirement: 75000, reward: 100, type: 'purchase', isVip: true, completed: false },
  { id: 'vq4', title: 'VIP –ú–∞–≥–Ω–∞—Ç', description: '–ü—Ä–æ–¥–∞—Ç—å 100 —Ç–æ–≤–∞—Ä–æ–≤', requirement: 100, reward: 200, type: 'sales', isVip: true, completed: false },
];

const ULTRA_QUESTS: Quest[] = [
  { id: 'uq1', title: 'Ultra –ú–∞–≥–Ω–∞—Ç', description: '–ü—Ä–æ–¥–∞—Ç—å 200 —Ç–æ–≤–∞—Ä–æ–≤', requirement: 200, reward: 300, type: 'sales', isVip: false, completed: false },
  { id: 'uq2', title: 'Ultra –ò–º–ø–µ—Ä–∏—è', description: '–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å 500000‚ÇΩ', requirement: 500000, reward: 300, type: 'revenue', isVip: false, completed: false },
  { id: 'uq3', title: 'Ultra –ò–Ω–≤–µ—Å—Ç–æ—Ä', description: '–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –Ω–∞ 300000‚ÇΩ', requirement: 300000, reward: 300, type: 'purchase', isVip: false, completed: false },
  { id: 'uq4', title: 'Ultra –ö–æ—Ä–æ–ª—å', description: '–ü—Ä–æ–¥–∞—Ç—å 500 —Ç–æ–≤–∞—Ä–æ–≤', requirement: 500, reward: 500, type: 'sales', isVip: false, completed: false },
];

const SUBSCRIPTIONS: Subscription[] = [
  {
    name: 'HimShop+',
    price: 500,
    duration: 7,
    benefits: ['50,000‚ÇΩ –±–æ–Ω—É—Å', '–ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ–¥–∞–∂–∏ x2', 'VIP –∫–≤–µ—Å—Ç—ã', '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –∑–∞–∫—É–ø–∫–∞—Ö'],
    icon: '‚≠ê'
  },
  {
    name: 'HimShop Ultra',
    price: 3499,
    duration: 7,
    benefits: ['–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –æ–≤–æ—â–∏/—Ñ—Ä—É–∫—Ç—ã –¥–æ 100‚ÇΩ', 'Ultra –∫–≤–µ—Å—Ç—ã', '–ü—Ä–µ–º–∏—É–º —Ç–æ–≤–∞—Ä—ã', '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏'],
    icon: 'üëë'
  }
];

export default function Index() {
  const [gameStats, setGameStats] = useState<GameStats>(() => {
    const saved = localStorage.getItem('himshop-game');
    if (saved) {
      const data = JSON.parse(saved);
      return {
        ...data,
        hasVipSubscription: data.vipExpiresAt > Date.now(),
        hasUltraSubscription: data.ultraExpiresAt > Date.now(),
        totalPurchases: data.totalPurchases || 0,
      };
    }
    return {
      totalSales: 0,
      totalRevenue: 0,
      currentLevel: 1,
      money: 1000,
      himCoins: 0,
      experience: 0,
      hasVipSubscription: false,
      hasUltraSubscription: false,
      vipExpiresAt: 0,
      ultraExpiresAt: 0,
      totalPurchases: 0
    };
  });

  const [products, setProducts] = useState<Product[]>(() => {
    const saved = localStorage.getItem('himshop-products');
    if (saved) {
      return JSON.parse(saved);
    }
    return [...VEGETABLES, ...FRUITS, ...ELECTRONICS, ...CARS];
  });

  const [quests, setQuests] = useState<Quest[]>(() => {
    const saved = localStorage.getItem('himshop-quests');
    if (saved) {
      return JSON.parse(saved);
    }
    return [...QUESTS, ...ULTRA_QUESTS];
  });

  const [selectedBlock, setSelectedBlock] = useState('shop');
  const [notification, setNotification] = useState<string>('');

  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
  useEffect(() => {
    localStorage.setItem('himshop-game', JSON.stringify(gameStats));
  }, [gameStats]);

  useEffect(() => {
    localStorage.setItem('himshop-products', JSON.stringify(products));
  }, [products]);

  useEffect(() => {
    localStorage.setItem('himshop-quests', JSON.stringify(quests));
  }, [quests]);

  // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—Ä–æ–≤–Ω–µ–π
  useEffect(() => {
    if (gameStats.totalSales >= 100 && gameStats.currentLevel === 1) {
      setGameStats(prev => ({ ...prev, currentLevel: 2 }));
      setProducts(prev => prev.map(p => 
        p.category === 'electronics' ? { ...p, unlocked: true } : p
      ));
      showNotification('üéâ –û—Ç–∫—Ä—ã—Ç —É—Ä–æ–≤–µ–Ω—å "–¢–µ—Ö–Ω–∏–∫–∞"!');
    }
    
    if (gameStats.totalSales >= 500 && gameStats.currentLevel === 2) {
      setGameStats(prev => ({ ...prev, currentLevel: 3 }));
      setProducts(prev => prev.map(p => 
        p.category === 'cars' ? { ...p, unlocked: true } : p
      ));
      showNotification('üöó –û—Ç–∫—Ä—ã—Ç —É—Ä–æ–≤–µ–Ω—å "–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å"!');
    }
  }, [gameStats.totalSales]);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–≤–µ—Å—Ç–æ–≤
  useEffect(() => {
    setQuests(prev => prev.map(quest => {
      if (quest.completed) return quest;
      
      let currentValue = 0;
      switch (quest.type) {
        case 'sales':
          currentValue = gameStats.totalSales;
          break;
        case 'revenue':
          currentValue = gameStats.totalRevenue;
          break;
        case 'purchase':
          currentValue = gameStats.totalPurchases;
          break;
      }
      
      if (currentValue >= quest.requirement) {
        setGameStats(stats => ({ ...stats, himCoins: stats.himCoins + quest.reward }));
        showNotification(`üéä –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: ${quest.title} (+${quest.reward} HimCoins)`);
        return { ...quest, completed: true };
      }
      
      return quest;
    }));
  }, [gameStats.totalSales, gameStats.totalRevenue, gameStats.totalPurchases]);

  const showNotification = (message: string) => {
    setNotification(message);
    setTimeout(() => setNotification(''), 4000);
  };

  const sellProduct = (productId: string) => {
    setProducts(prev => prev.map(product => {
      if (product.id === productId && product.stock > 0) {
        const profit = product.sellPrice - product.buyPrice;
        const sellSpeed = gameStats.hasVipSubscription ? 2 : 1;
        
        setGameStats(stats => ({
          ...stats,
          totalSales: stats.totalSales + sellSpeed,
          totalRevenue: stats.totalRevenue + (product.sellPrice * sellSpeed),
          money: stats.money + (profit * sellSpeed),
          himCoins: stats.himCoins + sellSpeed,
        }));

        showNotification(`–ü—Ä–æ–¥–∞–Ω–æ: ${product.name} (+${(profit * sellSpeed).toLocaleString()}‚ÇΩ, +${sellSpeed} HimCoins)`);
        
        return { ...product, stock: Math.max(0, product.stock - sellSpeed) };
      }
      return product;
    }));
  };

  const restockProduct = (productId: string, quantity: number = 10) => {
    const product = products.find(p => p.id === productId);
    if (!product) return;

    // Ultra –ø–æ–¥–ø–∏—Å–∫–∞ –¥–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –æ–≤–æ—â–∏ –∏ —Ñ—Ä—É–∫—Ç—ã –¥–æ 100‚ÇΩ
    const isFree = gameStats.hasUltraSubscription && 
                   (product.category === 'vegetables' || product.category === 'fruits') && 
                   product.buyPrice <= 100;
    
    const cost = isFree ? 0 : product.buyPrice * quantity;
    
    if (!isFree && gameStats.money < cost) {
      showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∑–∞–∫—É–ø–∫–∏!');
      return;
    }

    setProducts(prev => prev.map(p => 
      p.id === productId ? { ...p, stock: p.stock + quantity } : p
    ));
    
    if (!isFree) {
      setGameStats(prev => ({ 
        ...prev, 
        money: prev.money - cost,
        totalPurchases: prev.totalPurchases + cost
      }));
    }
    
    showNotification(`–ó–∞–∫—É–ø–ª–µ–Ω–æ: ${product.name} x${quantity} ${isFree ? '(–ë–ï–°–ü–õ–ê–¢–ù–û Ultra!)' : `(-${cost.toLocaleString()}‚ÇΩ)`}`);
  };

  const buySubscription = (subscriptionName: string) => {
    const subscription = SUBSCRIPTIONS.find(s => s.name === subscriptionName);
    if (!subscription) return;

    if (gameStats.himCoins < subscription.price) {
      showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ HimCoins!');
      return;
    }

    const expiresAt = Date.now() + (subscription.duration * 24 * 60 * 60 * 1000);
    
    setGameStats(prev => ({
      ...prev,
      himCoins: prev.himCoins - subscription.price,
      money: subscriptionName === 'HimShop+' ? prev.money + 50000 : prev.money,
      hasVipSubscription: subscriptionName === 'HimShop+' ? true : prev.hasVipSubscription,
      hasUltraSubscription: subscriptionName === 'HimShop Ultra' ? true : prev.hasUltraSubscription,
      vipExpiresAt: subscriptionName === 'HimShop+' ? expiresAt : prev.vipExpiresAt,
      ultraExpiresAt: subscriptionName === 'HimShop Ultra' ? expiresAt : prev.ultraExpiresAt,
    }));

    showNotification(`üéâ –ü–æ–¥–ø–∏—Å–∫–∞ ${subscriptionName} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!`);
  };

  const repairCar = (carId: string) => {
    const car = products.find(p => p.id === carId);
    if (!car || car.stock > 0) return;

    const repairCost = car.buyPrice;
    if (gameStats.money < repairCost) {
      showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞!');
      return;
    }

    setProducts(prev => prev.map(p => 
      p.id === carId ? { ...p, stock: 1 } : p
    ));
    
    setGameStats(prev => ({ 
      ...prev, 
      money: prev.money - repairCost,
      totalPurchases: prev.totalPurchases + repairCost
    }));
    
    showNotification(`üîß ${car.name} –æ—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω! (-${repairCost.toLocaleString()}‚ÇΩ)`);
  };

  const availableProducts = products.filter(p => p.unlocked);
  const vegetables = availableProducts.filter(p => p.category === 'vegetables');
  const fruits = availableProducts.filter(p => p.category === 'fruits');
  const electronics = availableProducts.filter(p => p.category === 'electronics');
  const cars = availableProducts.filter(p => p.category === 'cars');

  const blocks = [
    { id: 'shop', name: '–¢–æ—Ä–≥–æ–≤–ª—è', icon: 'Store', description: '–ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤', color: 'bg-blue-500' },
    { id: 'inventory', name: '–°–∫–ª–∞–¥', icon: 'Package', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞–º–∏', color: 'bg-green-500' },
    { id: 'purchase', name: '–ó–∞–∫—É–ø–∫–∞', icon: 'ShoppingBag', description: '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤', color: 'bg-purple-500' },
    { id: 'subscriptions', name: '–ü–æ–¥–ø–∏—Å–∫–∏', icon: 'Crown', description: 'Premium –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', color: 'bg-yellow-500' },
  ];

  if (gameStats.hasVipSubscription) {
    blocks.push({ id: 'vip', name: 'VIP', icon: 'Star', description: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∫–≤–µ—Å—Ç—ã', color: 'bg-orange-500' });
  }

  if (gameStats.hasUltraSubscription) {
    blocks.push({ id: 'ultra', name: 'Ultra', icon: 'Gem', description: '–£–ª—å—Ç—Ä–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', color: 'bg-pink-500' });
  }

  if (gameStats.currentLevel >= 3) {
    blocks.push({ id: 'autoservice', name: '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å', icon: 'Car', description: '–†–µ–º–æ–Ω—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π', color: 'bg-red-500' });
  }

  blocks.push({ id: 'stats', name: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', icon: 'BarChart3', description: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', color: 'bg-slate-500' });

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-4">
      <div className="max-w-7xl mx-auto space-y-6">
        {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
        {notification && (
          <div className="fixed top-4 right-4 z-50 bg-gradient-to-r from-blue-500 to-purple-500 text-white px-6 py-3 rounded-lg shadow-xl animate-bounce">
            {notification}
          </div>
        )}

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –≤–∞–ª—é—Ç—ã */}
        <div className="text-center space-y-4">
          <h1 className="text-5xl font-bold text-slate-800 flex items-center justify-center gap-3">
            <Icon name="Store" size={50} className="text-blue-600" />
            HimShop Simulator
          </h1>
          <div className="flex justify-center gap-6 flex-wrap">
            <div className="bg-white rounded-lg p-4 shadow-md min-w-[120px]">
              <div className="text-2xl font-bold text-green-600">{gameStats.money.toLocaleString()}‚ÇΩ</div>
              <div className="text-sm text-slate-600">–ë–∞–ª–∞–Ω—Å</div>
            </div>
            <div className="bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg p-4 shadow-md min-w-[120px]">
              <div className="text-2xl font-bold">{gameStats.himCoins}</div>
              <div className="text-sm">HimCoins</div>
            </div>
            <div className="bg-white rounded-lg p-4 shadow-md min-w-[120px]">
              <div className="text-2xl font-bold text-blue-600">–£—Ä–æ–≤–µ–Ω—å {gameStats.currentLevel}</div>
              <div className="text-sm text-slate-600">
                {gameStats.currentLevel === 1 ? '–û–≤–æ—â–∏/–§—Ä—É–∫—Ç—ã' : 
                 gameStats.currentLevel === 2 ? '–¢–µ—Ö–Ω–∏–∫–∞' : '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å'}
              </div>
            </div>
            <div className="bg-white rounded-lg p-4 shadow-md min-w-[120px]">
              <div className="text-2xl font-bold text-orange-600">{gameStats.totalSales}</div>
              <div className="text-sm text-slate-600">–ü—Ä–æ–¥–∞–∂–∏</div>
            </div>
          </div>
          
          {/* –ü–æ–¥–ø–∏—Å–∫–∏ —Å—Ç–∞—Ç—É—Å */}
          <div className="flex justify-center gap-4 flex-wrap">
            {gameStats.hasVipSubscription && (
              <Badge className="bg-gradient-to-r from-yellow-400 to-orange-500 text-white px-4 py-2">
                ‚≠ê HimShop+ –∞–∫—Ç–∏–≤–Ω–∞
              </Badge>
            )}
            {gameStats.hasUltraSubscription && (
              <Badge className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-4 py-2">
                üëë HimShop Ultra –∞–∫—Ç–∏–≤–Ω–∞
              </Badge>
            )}
          </div>

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è */}
          {gameStats.currentLevel < 3 && (
            <div className="max-w-md mx-auto">
              <div className="flex justify-between text-sm mb-2">
                <span>–î–æ —É—Ä–æ–≤–Ω—è {gameStats.currentLevel + 1}</span>
                <span>{gameStats.totalSales}/{gameStats.currentLevel === 1 ? 100 : 500} –ø—Ä–æ–¥–∞–∂</span>
              </div>
              <Progress 
                value={gameStats.currentLevel === 1 ? 
                  Math.min((gameStats.totalSales / 100) * 100, 100) :
                  Math.min(((gameStats.totalSales - 100) / 400) * 100, 100)
                } 
                className="h-3" 
              />
            </div>
          )}
        </div>

        {/* –ë–ª–æ–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4">
          {blocks.map(block => (
            <Card 
              key={block.id}
              className={`cursor-pointer transition-all duration-200 hover:scale-105 hover:shadow-lg ${
                selectedBlock === block.id ? 'ring-2 ring-blue-500 bg-blue-50' : ''
              }`}
              onClick={() => setSelectedBlock(block.id)}
            >
              <CardHeader className="text-center pb-2 pt-4">
                <div className={`w-12 h-12 rounded-full ${block.color} flex items-center justify-center mx-auto mb-2`}>
                  <Icon name={block.icon as any} size={24} className="text-white" />
                </div>
                <CardTitle className="text-lg">{block.name}</CardTitle>
                <CardDescription className="text-xs">{block.description}</CardDescription>
              </CardHeader>
            </Card>
          ))}
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –±–ª–æ–∫–æ–≤ */}
        <div className="space-y-6">
          {/* –¢–æ—Ä–≥–æ–≤–ª—è */}
          {selectedBlock === 'shop' && (
            <div className="space-y-8">
              {/* –û–≤–æ—â–∏ */}
              <div className="space-y-4">
                <h2 className="text-3xl font-bold flex items-center gap-3">
                  <Icon name="Carrot" size={32} className="text-orange-500" />
                  –û–≤–æ—â–∏
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                  {vegetables.map(product => (
                    <Card key={product.id} className="hover:shadow-lg transition-all duration-200 hover:scale-105">
                      <CardHeader className="text-center pb-2">
                        <div className="text-4xl mb-2">{product.image}</div>
                        <CardTitle className="text-lg">{product.name}</CardTitle>
                        <CardDescription className="text-xs">{product.description}</CardDescription>
                      </CardHeader>
                      <CardContent className="pt-0 space-y-3">
                        <div className="flex justify-between items-center">
                          <span className="text-lg font-bold text-green-600">{product.sellPrice.toLocaleString()}‚ÇΩ</span>
                          <Badge variant={product.stock > 0 ? 'default' : 'destructive'}>
                            {product.stock} —à—Ç
                          </Badge>
                        </div>
                        <Button 
                          onClick={() => sellProduct(product.id)}
                          disabled={product.stock === 0}
                          className="w-full"
                          size="sm"
                        >
                          <Icon name="ShoppingCart" size={16} className="mr-2" />
                          –ü—Ä–æ–¥–∞—Ç—å {gameStats.hasVipSubscription ? 'x2' : ''}
                        </Button>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </div>

              {/* –§—Ä—É–∫—Ç—ã */}
              <div className="space-y-4">
                <h2 className="text-3xl font-bold flex items-center gap-3">
                  <Icon name="Apple" size={32} className="text-red-500" />
                  –§—Ä—É–∫—Ç—ã
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                  {fruits.map(product => (
                    <Card key={product.id} className="hover:shadow-lg transition-all duration-200 hover:scale-105 border-red-200">
                      <CardHeader className="text-center pb-2">
                        <div className="text-4xl mb-2">{product.image}</div>
                        <CardTitle className="text-lg">{product.name}</CardTitle>
                        <CardDescription className="text-xs">{product.description}</CardDescription>
                      </CardHeader>
                      <CardContent className="pt-0 space-y-3">
                        <div className="flex justify-between items-center">
                          <span className="text-lg font-bold text-red-600">{product.sellPrice.toLocaleString()}‚ÇΩ</span>
                          <Badge variant={product.stock > 0 ? 'default' : 'destructive'}>
                            {product.stock} —à—Ç
                          </Badge>
                        </div>
                        <Button 
                          onClick={() => sellProduct(product.id)}
                          disabled={product.stock === 0}
                          className="w-full"
                          size="sm"
                        >
                          <Icon name="ShoppingCart" size={16} className="mr-2" />
                          –ü—Ä–æ–¥–∞—Ç—å {gameStats.hasVipSubscription ? 'x2' : ''}
                        </Button>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </div>

              {/* –¢–µ—Ö–Ω–∏–∫–∞ */}
              {gameStats.currentLevel >= 2 && (
                <div className="space-y-4">
                  <h2 className="text-3xl font-bold flex items-center gap-3">
                    <Icon name="Smartphone" size={32} className="text-blue-500" />
                    –¢–µ—Ö–Ω–∏–∫–∞
                  </h2>
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                    {electronics.slice(0, 20).map(product => (
                      <Card key={product.id} className="hover:shadow-lg transition-all duration-200 hover:scale-105 border-blue-200">
                        <CardHeader className="text-center pb-2">
                          <div className="text-4xl mb-2">{product.image}</div>
                          <CardTitle className="text-lg">{product.name}</CardTitle>
                          <CardDescription className="text-xs">{product.description}</CardDescription>
                        </CardHeader>
                        <CardContent className="pt-0 space-y-3">
                          <div className="flex justify-between items-center">
                            <span className="text-lg font-bold text-blue-600">{product.sellPrice.toLocaleString()}‚ÇΩ</span>
                            <Badge variant={product.stock > 0 ? 'default' : 'destructive'}>
                              {product.stock} —à—Ç
                            </Badge>
                          </div>
                          <Button 
                            onClick={() => sellProduct(product.id)}
                            disabled={product.stock === 0}
                            className="w-full"
                            size="sm"
                          >
                            <Icon name="ShoppingCart" size={16} className="mr-2" />
                            –ü—Ä–æ–¥–∞—Ç—å {gameStats.hasVipSubscription ? 'x2' : ''}
                          </Button>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </div>
              )}
            </div>
          )}

          {/* –°–∫–ª–∞–¥ */}
          {selectedBlock === 'inventory' && (
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Package" size={24} />
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º
                </CardTitle>
                <CardDescription>–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-2 max-h-96 overflow-y-auto">
                  {availableProducts.filter(p => p.stock > 0 || p.category === 'cars').map(product => (
                    <div key={product.id} className="flex items-center justify-between p-3 border rounded-lg hover:bg-slate-50">
                      <div className="flex items-center gap-3">
                        <span className="text-xl">{product.image}</span>
                        <div>
                          <div className="font-semibold">{product.name}</div>
                          <div className="text-sm text-slate-600">{product.sellPrice.toLocaleString()}‚ÇΩ</div>
                        </div>
                      </div>
                      <Badge variant={product.stock > 5 ? 'default' : product.stock > 0 ? 'secondary' : 'destructive'}>
                        {product.stock} —à—Ç
                      </Badge>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          )}

          {/* –ó–∞–∫—É–ø–∫–∞ */}
          {selectedBlock === 'purchase' && (
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="ShoppingBag" size={24} />
                  –ó–∞–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
                </CardTitle>
                <CardDescription>–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø–∞—Å—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-2 max-h-96 overflow-y-auto">
                  {availableProducts.map(product => (
                    <div key={product.id} className="flex items-center justify-between p-3 border rounded-lg hover:bg-slate-50">
                      <div className="flex items-center gap-3">
                        <span className="text-xl">{product.image}</span>
                        <div>
                          <div className="font-semibold flex items-center gap-2">
                            {product.name}
                            {gameStats.hasUltraSubscription && 
                             (product.category === 'vegetables' || product.category === 'fruits') && 
                             product.buyPrice <= 100 && (
                              <Badge className="bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs">
                                –ë–ï–°–ü–õ–ê–¢–ù–û
                              </Badge>
                            )}
                          </div>
                          <div className="text-sm text-slate-600">
                            –ó–∞–∫—É–ø–æ—á–Ω–∞—è —Ü–µ–Ω–∞: {product.buyPrice.toLocaleString()}‚ÇΩ | 
                            –ü—Ä–∏–±—ã–ª—å: {(product.sellPrice - product.buyPrice).toLocaleString()}‚ÇΩ
                          </div>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <Button 
                          onClick={() => restockProduct(product.id, 5)}
                          size="sm"
                          variant="outline"
                          disabled={!gameStats.hasUltraSubscription && 
                                   !((product.category === 'vegetables' || product.category === 'fruits') && product.buyPrice <= 100) &&
                                   gameStats.money < product.buyPrice * 5}
                        >
                          +5
                        </Button>
                        <Button 
                          onClick={() => restockProduct(product.id, 10)}
                          size="sm"
                          disabled={!gameStats.hasUltraSubscription && 
                                   !((product.category === 'vegetables' || product.category === 'fruits') && product.buyPrice <= 100) &&
                                   gameStats.money < product.buyPrice * 10}
                        >
                          +10
                        </Button>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          )}

          {/* –ü–æ–¥–ø–∏—Å–∫–∏ */}
          {selectedBlock === 'subscriptions' && (
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {SUBSCRIPTIONS.map(subscription => (
                <Card key={subscription.name} className="relative overflow-hidden">
                  <div className={`absolute inset-0 bg-gradient-to-br ${
                    subscription.name === 'HimShop+' 
                      ? 'from-yellow-400/10 to-orange-500/10' 
                      : 'from-purple-500/10 to-pink-500/10'
                  }`} />
                  <CardHeader className="relative">
                    <CardTitle className="flex items-center gap-3 text-2xl">
                      <span className="text-3xl">{subscription.icon}</span>
                      {subscription.name}
                    </CardTitle>
                    <CardDescription>
                      {subscription.price} HimCoins –Ω–∞ {subscription.duration} –¥–Ω–µ–π
                    </CardDescription>
                  </CardHeader>
                  <CardContent className="relative space-y-4">
                    <div className="space-y-2">
                      {subscription.benefits.map((benefit, index) => (
                        <div key={index} className="flex items-center gap-2">
                          <Icon name="Check" size={16} className="text-green-500" />
                          <span className="text-sm">{benefit}</span>
                        </div>
                      ))}
                    </div>
                    <Button 
                      onClick={() => buySubscription(subscription.name)}
                      disabled={gameStats.himCoins < subscription.price || 
                               (subscription.name === 'HimShop+' && gameStats.hasVipSubscription) ||
                               (subscription.name === 'HimShop Ultra' && gameStats.hasUltraSubscription)}
                      className="w-full"
                    >
                      {(subscription.name === 'HimShop+' && gameStats.hasVipSubscription) ||
                       (subscription.name === 'HimShop Ultra' && gameStats.hasUltraSubscription)
                        ? '–£–∂–µ –∞–∫—Ç–∏–≤–Ω–∞' 
                        : `–ö—É–ø–∏—Ç—å –∑–∞ ${subscription.price} HimCoins`}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          )}

          {/* VIP –±–ª–æ–∫ */}
          {selectedBlock === 'vip' && gameStats.hasVipSubscription && (
            <div className="space-y-6">
              <div className="text-center">
                <h2 className="text-3xl font-bold text-yellow-600 flex items-center justify-center gap-3">
                  ‚≠ê VIP –ö–≤–µ—Å—Ç—ã ‚≠ê
                </h2>
                <p className="text-slate-600">–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è VIP –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</p>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {quests.filter(q => q.isVip).map(quest => (
                  <Card key={quest.id} className={`${quest.completed ? 'bg-green-50 border-green-200' : ''}`}>
                    <CardHeader>
                      <CardTitle className="flex items-center justify-between">
                        {quest.title}
                        {quest.completed && <Icon name="Check" className="text-green-500" size={20} />}
                      </CardTitle>
                      <CardDescription>{quest.description}</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="flex justify-between items-center">
                        <span className="text-sm text-slate-600">
                          –ü—Ä–æ–≥—Ä–µ—Å—Å: {Math.min(
                            quest.type === 'sales' ? gameStats.totalSales :
                            quest.type === 'revenue' ? gameStats.totalRevenue :
                            gameStats.totalPurchases,
                            quest.requirement
                          )}/{quest.requirement}
                        </span>
                        <Badge className="bg-gradient-to-r from-yellow-400 to-orange-500 text-white">
                          +{quest.reward} HimCoins
                        </Badge>
                      </div>
                      <Progress 
                        value={Math.min((
                          (quest.type === 'sales' ? gameStats.totalSales :
                           quest.type === 'revenue' ? gameStats.totalRevenue :
                           gameStats.totalPurchases) / quest.requirement
                        ) * 100, 100)}
                        className="mt-2"
                      />
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          )}

          {/* Ultra –±–ª–æ–∫ */}
          {selectedBlock === 'ultra' && gameStats.hasUltraSubscription && (
            <div className="space-y-6">
              <div className="text-center">
                <h2 className="text-3xl font-bold bg-gradient-to-r from-purple-500 to-pink-500 bg-clip-text text-transparent flex items-center justify-center gap-3">
                  üëë Ultra –ö–≤–µ—Å—Ç—ã üëë
                </h2>
                <p className="text-slate-600">–°–∞–º—ã–µ –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è Ultra –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</p>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {quests.filter(q => !q.isVip && q.reward >= 300).map(quest => (
                  <Card key={quest.id} className={`${quest.completed ? 'bg-purple-50 border-purple-200' : 'border-purple-200'}`}>
                    <CardHeader>
                      <CardTitle className="flex items-center justify-between">
                        {quest.title}
                        {quest.completed && <Icon name="Check" className="text-purple-500" size={20} />}
                      </CardTitle>
                      <CardDescription>{quest.description}</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="flex justify-between items-center">
                        <span className="text-sm text-slate-600">
                          –ü—Ä–æ–≥—Ä–µ—Å—Å: {Math.min(
                            quest.type === 'sales' ? gameStats.totalSales :
                            quest.type === 'revenue' ? gameStats.totalRevenue :
                            gameStats.totalPurchases,
                            quest.requirement
                          )}/{quest.requirement}
                        </span>
                        <Badge className="bg-gradient-to-r from-purple-500 to-pink-500 text-white">
                          +{quest.reward} HimCoins
                        </Badge>
                      </div>
                      <Progress 
                        value={Math.min((
                          (quest.type === 'sales' ? gameStats.totalSales :
                           quest.type === 'revenue' ? gameStats.totalRevenue :
                           gameStats.totalPurchases) / quest.requirement
                        ) * 100, 100)}
                        className="mt-2"
                      />
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          )}

          {/* –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å */}
          {selectedBlock === 'autoservice' && gameStats.currentLevel >= 3 && (
            <div className="space-y-6">
              <div className="text-center">
                <h2 className="text-3xl font-bold text-red-600 flex items-center justify-center gap-3">
                  <Icon name="Car" size={32} />
                  –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å
                </h2>
                <p className="text-slate-600">–†–µ–º–æ–Ω—Ç–∏—Ä—É–π—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ –∏—Ö —Å –ø—Ä–∏–±—ã–ª—å—é</p>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {cars.map(car => (
                  <Card key={car.id} className="hover:shadow-lg transition-all duration-200">
                    <CardHeader className="text-center">
                      <div className="text-4xl mb-2">{car.image}</div>
                      <CardTitle className="text-lg">{car.name}</CardTitle>
                      <CardDescription className="text-xs">{car.description}</CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      <div className="flex justify-between items-center">
                        <span className="text-lg font-bold text-blue-600">{car.sellPrice.toLocaleString()}‚ÇΩ</span>
                        <Badge variant={car.stock > 0 ? 'default' : 'destructive'}>
                          {car.stock > 0 ? '–ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∂–µ' : '–¢—Ä–µ–±—É–µ—Ç —Ä–µ–º–æ–Ω—Ç–∞'}
                        </Badge>
                      </div>
                      <div className="text-sm text-slate-600">
                        –°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç–∞: {car.buyPrice.toLocaleString()}‚ÇΩ | 
                        –ü—Ä–∏–±—ã–ª—å: {(car.sellPrice - car.buyPrice).toLocaleString()}‚ÇΩ
                      </div>
                      {car.stock === 0 ? (
                        <Button 
                          onClick={() => repairCar(car.id)}
                          disabled={gameStats.money < car.buyPrice}
                          className="w-full"
                          size="sm"
                        >
                          <Icon name="Wrench" size={16} className="mr-2" />
                          –û—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </Button>
                      ) : (
                        <Button 
                          onClick={() => sellProduct(car.id)}
                          className="w-full"
                          size="sm"
                        >
                          <Icon name="ShoppingCart" size={16} className="mr-2" />
                          –ü—Ä–æ–¥–∞—Ç—å {gameStats.hasVipSubscription ? 'x2' : ''}
                        </Button>
                      )}
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          )}

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          {selectedBlock === 'stats' && (
            <div className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Icon name="Trophy" size={24} className="text-yellow-500" />
                      –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className={`p-4 rounded-lg border-2 ${gameStats.totalSales >= 10 ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                      <div className="flex items-center gap-3">
                        <span className="text-2xl">üè™</span>
                        <div>
                          <div className="font-semibold">–ü–µ—Ä–≤—ã–µ –ø—Ä–æ–¥–∞–∂–∏</div>
                          <div className="text-sm text-gray-600">–ü—Ä–æ–¥–∞—Ç—å 10 —Ç–æ–≤–∞—Ä–æ–≤</div>
                        </div>
                        {gameStats.totalSales >= 10 && <Icon name="Check" className="text-green-500 ml-auto" size={20} />}
                      </div>
                    </div>
                    
                    <div className={`p-4 rounded-lg border-2 ${gameStats.totalRevenue >= 10000 ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                      <div className="flex items-center gap-3">
                        <span className="text-2xl">üí∞</span>
                        <div>
                          <div className="font-semibold">–ü–µ—Ä–≤–∞—è —Ç—ã—Å—è—á–∞</div>
                          <div className="text-sm text-gray-600">–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å 10,000‚ÇΩ</div>
                        </div>
                        {gameStats.totalRevenue >= 10000 && <Icon name="Check" className="text-green-500 ml-auto" size={20} />}
                      </div>
                    </div>

                    <div className={`p-4 rounded-lg border-2 ${gameStats.currentLevel >= 2 ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                      <div className="flex items-center gap-3">
                        <span className="text-2xl">üì±</span>
                        <div>
                          <div className="font-semibold">–¢–æ—Ä–≥–æ–≤–µ—Ü —Ç–µ—Ö–Ω–∏–∫–æ–π</div>
                          <div className="text-sm text-gray-600">–û—Ç–∫—Ä—ã—Ç—å —É—Ä–æ–≤–µ–Ω—å "–¢–µ—Ö–Ω–∏–∫–∞"</div>
                        </div>
                        {gameStats.currentLevel >= 2 && <Icon name="Check" className="text-green-500 ml-auto" size={20} />}
                      </div>
                    </div>

                    <div className={`p-4 rounded-lg border-2 ${gameStats.currentLevel >= 3 ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                      <div className="flex items-center gap-3">
                        <span className="text-2xl">üöó</span>
                        <div>
                          <div className="font-semibold">–ê–≤—Ç–æ–º–µ—Ö–∞–Ω–∏–∫</div>
                          <div className="text-sm text-gray-600">–û—Ç–∫—Ä—ã—Ç—å —É—Ä–æ–≤–µ–Ω—å "–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å"</div>
                        </div>
                        {gameStats.currentLevel >= 3 && <Icon name="Check" className="text-green-500 ml-auto" size={20} />}
                      </div>
                    </div>
                  </CardContent>
                </Card>

                {/* –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Icon name="BarChart3" size={24} className="text-blue-500" />
                      –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="grid grid-cols-2 gap-4">
                      <div className="text-center p-3 bg-blue-50 rounded-lg">
                        <div className="text-xl font-bold text-blue-600">{gameStats.totalSales}</div>
                        <div className="text-xs text-gray-600">–û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏</div>
                      </div>
                      <div className="text-center p-3 bg-green-50 rounded-lg">
                        <div className="text-xl font-bold text-green-600">
                          {gameStats.totalSales > 0 ? Math.round(gameStats.totalRevenue / gameStats.totalSales) : 0}‚ÇΩ
                        </div>
                        <div className="text-xs text-gray-600">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</div>
                      </div>
                      <div className="text-center p-3 bg-purple-50 rounded-lg">
                        <div className="text-xl font-bold text-purple-600">{vegetables.reduce((acc, p) => acc + p.stock, 0)}</div>
                        <div className="text-xs text-gray-600">–û–≤–æ—â–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ</div>
                      </div>
                      <div className="text-center p-3 bg-red-50 rounded-lg">
                        <div className="text-xl font-bold text-red-600">{fruits.reduce((acc, p) => acc + p.stock, 0)}</div>
                        <div className="text-xs text-gray-600">–§—Ä—É–∫—Ç—ã –Ω–∞ —Å–∫–ª–∞–¥–µ</div>
                      </div>
                      <div className="text-center p-3 bg-orange-50 rounded-lg">
                        <div className="text-xl font-bold text-orange-600">{electronics.reduce((acc, p) => acc + p.stock, 0)}</div>
                        <div className="text-xs text-gray-600">–¢–µ—Ö–Ω–∏–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ</div>
                      </div>
                      <div className="text-center p-3 bg-slate-50 rounded-lg">
                        <div className="text-xl font-bold text-slate-600">{cars.reduce((acc, p) => acc + p.stock, 0)}</div>
                        <div className="text-xs text-gray-600">–ê–≤—Ç–æ –≥–æ—Ç–æ–≤—ã</div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>

              {/* –ö–≤–µ—Å—Ç—ã */}
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Icon name="Target" size={24} className="text-green-500" />
                    –û–±—ã—á–Ω—ã–µ –∫–≤–µ—Å—Ç—ã
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {quests.filter(q => !q.isVip && q.reward < 300).map(quest => (
                      <div key={quest.id} className={`p-4 rounded-lg border-2 ${quest.completed ? 'border-green-200 bg-green-50' : 'border-gray-200'}`}>
                        <div className="flex items-center justify-between mb-2">
                          <h4 className="font-semibold">{quest.title}</h4>
                          {quest.completed && <Icon name="Check" className="text-green-500" size={20} />}
                        </div>
                        <p className="text-sm text-gray-600 mb-2">{quest.description}</p>
                        <div className="flex justify-between items-center mb-2">
                          <span className="text-sm">
                            {Math.min(
                              quest.type === 'sales' ? gameStats.totalSales :
                              quest.type === 'revenue' ? gameStats.totalRevenue :
                              gameStats.totalPurchases,
                              quest.requirement
                            )}/{quest.requirement}
                          </span>
                          <Badge variant="outline">+{quest.reward} HimCoins</Badge>
                        </div>
                        <Progress 
                          value={Math.min((
                            (quest.type === 'sales' ? gameStats.totalSales :
                             quest.type === 'revenue' ? gameStats.totalRevenue :
                             gameStats.totalPurchases) / quest.requirement
                          ) * 100, 100)}
                        />
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}