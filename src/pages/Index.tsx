import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
interface Product {
  id: string;
  name: string;
  category: 'vegetables' | 'electronics';
  buyPrice: number;
  sellPrice: number;
  stock: number;
  image: string;
  description: string;
  unlocked: boolean;
}

interface GameStats {
  totalSales: number;
  totalRevenue: number;
  currentLevel: number;
  money: number;
  experience: number;
}

// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
const VEGETABLES: Product[] = [
  { id: 'v1', name: '–ü–æ–º–∏–¥–æ—Ä—ã', category: 'vegetables', buyPrice: 50, sellPrice: 80, stock: 20, image: 'üçÖ', description: '–°–≤–µ–∂–∏–µ –∫—Ä–∞—Å–Ω—ã–µ –ø–æ–º–∏–¥–æ—Ä—ã', unlocked: true },
  { id: 'v2', name: '–û–≥—É—Ä—Ü—ã', category: 'vegetables', buyPrice: 40, sellPrice: 65, stock: 25, image: 'ü•í', description: '–•—Ä—É—Å—Ç—è—â–∏–µ –∑–µ–ª–µ–Ω—ã–µ –æ–≥—É—Ä—Ü—ã', unlocked: true },
  { id: 'v3', name: '–ú–æ—Ä–∫–æ–≤—å', category: 'vegetables', buyPrice: 30, sellPrice: 50, stock: 30, image: 'ü•ï', description: '–°–ª–∞–¥–∫–∞—è –æ—Ä–∞–Ω–∂–µ–≤–∞—è –º–æ—Ä–∫–æ–≤—å', unlocked: true },
  { id: 'v4', name: '–ö–∞–ø—É—Å—Ç–∞', category: 'vegetables', buyPrice: 35, sellPrice: 55, stock: 15, image: 'ü•¨', description: '–ë–µ–ª–æ–∫–æ—á–∞–Ω–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞', unlocked: true },
  { id: 'v5', name: '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å', category: 'vegetables', buyPrice: 25, sellPrice: 40, stock: 50, image: 'ü•î', description: '–ú–æ–ª–æ–¥–æ–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å', unlocked: true },
  { id: 'v6', name: '–õ—É–∫', category: 'vegetables', buyPrice: 20, sellPrice: 35, stock: 40, image: 'üßÖ', description: '–†–µ–ø—á–∞—Ç—ã–π –ª—É–∫', unlocked: true },
  { id: 'v7', name: '–ü–µ—Ä–µ—Ü', category: 'vegetables', buyPrice: 60, sellPrice: 95, stock: 18, image: 'üå∂Ô∏è', description: '–ë–æ–ª–≥–∞—Ä—Å–∫–∏–π –ø–µ—Ä–µ—Ü', unlocked: true },
  { id: 'v8', name: '–ë–∞–∫–ª–∞–∂–∞–Ω—ã', category: 'vegetables', buyPrice: 70, sellPrice: 110, stock: 12, image: 'üçÜ', description: '–§–∏–æ–ª–µ—Ç–æ–≤—ã–µ –±–∞–∫–ª–∞–∂–∞–Ω—ã', unlocked: true },
];

const ELECTRONICS: Product[] = [
  { id: 'e1', name: 'iPhone 15', category: 'electronics', buyPrice: 80000, sellPrice: 95000, stock: 5, image: 'üì±', description: '–ù–æ–≤–µ–π—à–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Apple', unlocked: false },
  { id: 'e2', name: 'Samsung Galaxy S24', category: 'electronics', buyPrice: 75000, sellPrice: 88000, stock: 4, image: 'üì±', description: '–§–ª–∞–≥–º–∞–Ω Samsung', unlocked: false },
  { id: 'e3', name: 'MacBook Pro', category: 'electronics', buyPrice: 150000, sellPrice: 175000, stock: 2, image: 'üíª', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –Ω–æ—É—Ç–±—É–∫', unlocked: false },
  { id: 'e4', name: 'iPad Air', category: 'electronics', buyPrice: 60000, sellPrice: 72000, stock: 6, image: 'üìü', description: '–ü–ª–∞–Ω—à–µ—Ç –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞', unlocked: false },
  { id: 'e5', name: 'AirPods Pro', category: 'electronics', buyPrice: 25000, sellPrice: 30000, stock: 10, image: 'üéß', description: '–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏', unlocked: false },
  { id: 'e6', name: 'PlayStation 5', category: 'electronics', buyPrice: 50000, sellPrice: 60000, stock: 3, image: 'üéÆ', description: '–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å Sony', unlocked: false },
  { id: 'e7', name: 'Nintendo Switch', category: 'electronics', buyPrice: 30000, sellPrice: 36000, stock: 7, image: 'üéÆ', description: '–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Å–æ–ª—å', unlocked: false },
  { id: 'e8', name: 'Apple Watch', category: 'electronics', buyPrice: 35000, sellPrice: 42000, stock: 8, image: '‚åö', description: '–£–º–Ω—ã–µ —á–∞—Å—ã Apple', unlocked: false },
  { id: 'e9', name: 'Samsung TV 4K', category: 'electronics', buyPrice: 100000, sellPrice: 120000, stock: 2, image: 'üì∫', description: '65" Smart TV', unlocked: false },
  { id: 'e10', name: 'Dyson V15', category: 'electronics', buyPrice: 45000, sellPrice: 54000, stock: 4, image: 'üîå', description: '–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π –ø—ã–ª–µ—Å–æ—Å', unlocked: false },
  { id: 'e11', name: 'Canon EOS R5', category: 'electronics', buyPrice: 300000, sellPrice: 350000, stock: 1, image: 'üì∑', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞', unlocked: false },
  { id: 'e12', name: 'DJI Air 3', category: 'electronics', buyPrice: 120000, sellPrice: 140000, stock: 2, image: 'üöÅ', description: '–î—Ä–æ–Ω —Å 4K –∫–∞–º–µ—Ä–æ–π', unlocked: false },
  { id: 'e13', name: 'Tesla Model S Plaid', category: 'electronics', buyPrice: 8000000, sellPrice: 9500000, stock: 1, image: 'üöó', description: '–≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å –ø—Ä–µ–º–∏—É–º', unlocked: false },
  { id: 'e14', name: 'Rolex Submariner', category: 'electronics', buyPrice: 1200000, sellPrice: 1500000, stock: 1, image: '‚åö', description: '–®–≤–µ–π—Ü–∞—Ä—Å–∫–∏–µ —á–∞—Å—ã', unlocked: false },
  { id: 'e15', name: 'MacBook Pro M3 Max', category: 'electronics', buyPrice: 400000, sellPrice: 480000, stock: 2, image: 'üíª', description: '–¢–æ–ø–æ–≤—ã–π –Ω–æ—É—Ç–±—É–∫ Apple', unlocked: false },
  { id: 'e16', name: 'Meta Quest 3', category: 'electronics', buyPrice: 60000, sellPrice: 75000, stock: 5, image: 'ü•Ω', description: 'VR –≥–∞—Ä–Ω–∏—Ç—É—Ä–∞', unlocked: false },
  { id: 'e17', name: 'iPhone 15 Pro Max', category: 'electronics', buyPrice: 130000, sellPrice: 150000, stock: 3, image: 'üì±', description: '–¢–æ–ø–æ–≤—ã–π iPhone', unlocked: false },
  { id: 'e18', name: 'Samsung QLED 85"', category: 'electronics', buyPrice: 500000, sellPrice: 600000, stock: 1, image: 'üì∫', description: '–û–≥—Ä–æ–º–Ω—ã–π Smart TV', unlocked: false },
  { id: 'e19', name: 'Bose QuietComfort', category: 'electronics', buyPrice: 35000, sellPrice: 42000, stock: 8, image: 'üéß', description: '–ù–∞—É—à–Ω–∏–∫–∏ —Å —à—É–º–æ–¥–∞–≤–æ–º', unlocked: false },
  { id: 'e20', name: 'Steam Deck OLED', category: 'electronics', buyPrice: 50000, sellPrice: 60000, stock: 4, image: 'üéÆ', description: '–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å', unlocked: false },
  { id: 'e21', name: 'Microsoft Surface Pro', category: 'electronics', buyPrice: 100000, sellPrice: 120000, stock: 3, image: 'üíª', description: '–ü–ª–∞–Ω—à–µ—Ç-–Ω–æ—É—Ç–±—É–∫', unlocked: false },
  { id: 'e22', name: 'GoPro Hero 12', category: 'electronics', buyPrice: 45000, sellPrice: 54000, stock: 6, image: 'üìπ', description: '–≠–∫—à–Ω-–∫–∞–º–µ—Ä–∞', unlocked: false },
  { id: 'e23', name: 'HomePod', category: 'electronics', buyPrice: 30000, sellPrice: 36000, stock: 5, image: 'üîä', description: '–£–º–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ Apple', unlocked: false },
  { id: 'e24', name: 'Kindle Oasis', category: 'electronics', buyPrice: 25000, sellPrice: 30000, stock: 10, image: 'üìñ', description: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞', unlocked: false },
  { id: 'e25', name: 'Ring Doorbell Pro', category: 'electronics', buyPrice: 20000, sellPrice: 25000, stock: 8, image: 'üîî', description: '–£–º–Ω—ã–π –¥–≤–µ—Ä–Ω–æ–π –∑–≤–æ–Ω–æ–∫', unlocked: false },
  { id: 'e26', name: 'Sonos Arc', category: 'electronics', buyPrice: 80000, sellPrice: 95000, stock: 3, image: 'üîä', description: '–°–∞—É–Ω–¥–±–∞—Ä –ø—Ä–µ–º–∏—É–º', unlocked: false },
  { id: 'e27', name: 'Apple Studio Display', category: 'electronics', buyPrice: 180000, sellPrice: 210000, stock: 2, image: 'üñ•Ô∏è', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä', unlocked: false },
  { id: 'e28', name: 'Xbox Series X', category: 'electronics', buyPrice: 50000, sellPrice: 60000, stock: 4, image: 'üéÆ', description: '–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å Microsoft', unlocked: false },
  { id: 'e29', name: 'AirTag 4-pack', category: 'electronics', buyPrice: 12000, sellPrice: 15000, stock: 15, image: 'üè∑Ô∏è', description: '–¢—Ä–µ–∫–µ—Ä—ã Apple', unlocked: false },
  { id: 'e30', name: 'Tesla Cybertruck', category: 'electronics', buyPrice: 6000000, sellPrice: 7200000, stock: 1, image: 'üöõ', description: '–≠–ª–µ–∫—Ç—Ä–æ–ø–∏–∫–∞–ø –±—É–¥—É—â–µ–≥–æ', unlocked: false },
  { id: 'e31', name: 'Magic Keyboard', category: 'electronics', buyPrice: 35000, sellPrice: 42000, stock: 8, image: '‚å®Ô∏è', description: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è iPad', unlocked: false },
  { id: 'e32', name: 'Apple Pencil Pro', category: 'electronics', buyPrice: 15000, sellPrice: 18000, stock: 12, image: '‚úèÔ∏è', description: '–°—Ç–∏–ª—É—Å –¥–ª—è iPad', unlocked: false },
  { id: 'e33', name: 'Dyson Airwrap', category: 'electronics', buyPrice: 50000, sellPrice: 60000, stock: 4, image: 'üí®', description: '–°—Ç–∞–π–ª–µ—Ä –¥–ª—è –≤–æ–ª–æ—Å', unlocked: false },
  { id: 'e34', name: 'Philips Hue Starter Kit', category: 'electronics', buyPrice: 15000, sellPrice: 18000, stock: 10, image: 'üí°', description: '–£–º–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ', unlocked: false },
  { id: 'e35', name: 'Oculus Rift S', category: 'electronics', buyPrice: 40000, sellPrice: 48000, stock: 3, image: 'ü•Ω', description: 'VR –≥–∞—Ä–Ω–∏—Ç—É—Ä–∞ –¥–ª—è –ü–ö', unlocked: false },
  { id: 'e36', name: 'Surface Studio', category: 'electronics', buyPrice: 350000, sellPrice: 420000, stock: 1, image: 'üñ•Ô∏è', description: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä', unlocked: false },
  { id: 'e37', name: 'iPad Pro 12.9"', category: 'electronics', buyPrice: 120000, sellPrice: 140000, stock: 3, image: 'üì±', description: '–ë–æ–ª—å—à–æ–π iPad Pro', unlocked: false },
  { id: 'e38', name: 'AirPods Max', category: 'electronics', buyPrice: 60000, sellPrice: 72000, stock: 4, image: 'üéß', description: '–ü—Ä–µ–º–∏—É–º –Ω–∞—É—à–Ω–∏–∫–∏ Apple', unlocked: false },
  { id: 'e39', name: 'iMac 24" M3', category: 'electronics', buyPrice: 150000, sellPrice: 180000, stock: 2, image: 'üñ•Ô∏è', description: '–ú–æ–Ω–æ–±–ª–æ–∫ Apple', unlocked: false },
  { id: 'e40', name: 'Sony A7R V', category: 'electronics', buyPrice: 400000, sellPrice: 480000, stock: 1, image: 'üì∑', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞ Sony', unlocked: false },
  { id: 'e41', name: 'Nintendo Switch OLED', category: 'electronics', buyPrice: 35000, sellPrice: 42000, stock: 6, image: 'üéÆ', description: '–£–ª—É—á—à–µ–Ω–Ω–∞—è Switch', unlocked: false },
  { id: 'e42', name: 'Tesla Model 3', category: 'electronics', buyPrice: 4000000, sellPrice: 4800000, stock: 1, image: 'üöó', description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —ç–ª–µ–∫—Ç—Ä–æ–∫–∞—Ä', unlocked: false },
  { id: 'e43', name: 'Mac Studio', category: 'electronics', buyPrice: 250000, sellPrice: 300000, stock: 2, image: 'üíª', description: '–ú–æ—â–Ω—ã–π Mac –¥–ª—è –ø—Ä–æ—Ñ–∏', unlocked: false },
  { id: 'e44', name: 'LG OLED C3 55"', category: 'electronics', buyPrice: 150000, sellPrice: 180000, stock: 2, image: 'üì∫', description: 'OLED —Ç–µ–ª–µ–≤–∏–∑–æ—Ä LG', unlocked: false },
  { id: 'e45', name: 'Framework Laptop', category: 'electronics', buyPrice: 100000, sellPrice: 120000, stock: 3, image: 'üíª', description: '–ú–æ–¥—É–ª—å–Ω—ã–π –Ω–æ—É—Ç–±—É–∫', unlocked: false },
  { id: 'e46', name: 'Steam Controller', category: 'electronics', buyPrice: 8000, sellPrice: 10000, stock: 20, image: 'üéÆ', description: '–ì–µ–π–º–ø–∞–¥ Steam', unlocked: false },
  { id: 'e47', name: 'Razer Blade 15', category: 'electronics', buyPrice: 200000, sellPrice: 240000, stock: 2, image: 'üíª', description: '–ò–≥—Ä–æ–≤–æ–π –Ω–æ—É—Ç–±—É–∫', unlocked: false },
  { id: 'e48', name: 'Elgato Stream Deck', category: 'electronics', buyPrice: 15000, sellPrice: 18000, stock: 8, image: 'üéõÔ∏è', description: '–ü–∞–Ω–µ–ª—å –¥–ª—è —Å—Ç—Ä–∏–º–µ—Ä–æ–≤', unlocked: false },
  { id: 'e49', name: 'Asus ROG Phone 8', category: 'electronics', buyPrice: 80000, sellPrice: 96000, stock: 3, image: 'üì±', description: '–ò–≥—Ä–æ–≤–æ–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω', unlocked: false },
  { id: 'e50', name: 'Valve Index VR Kit', category: 'electronics', buyPrice: 120000, sellPrice: 144000, stock: 2, image: 'ü•Ω', description: 'VR —Å–∏—Å—Ç–µ–º–∞ Valve', unlocked: false }
];

export default function Index() {
  const [gameStats, setGameStats] = useState<GameStats>({
    totalSales: 0,
    totalRevenue: 0,
    currentLevel: 1,
    money: 1000,
    experience: 0
  });

  const [products, setProducts] = useState<Product[]>([...VEGETABLES, ...ELECTRONICS]);
  const [selectedTab, setSelectedTab] = useState('shop');
  const [notification, setNotification] = useState<string>('');

  // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏ –ø—Ä–∏ 100 –ø—Ä–æ–¥–∞–∂–∞—Ö
  useEffect(() => {
    if (gameStats.totalSales >= 100 && gameStats.currentLevel === 1) {
      setGameStats(prev => ({ ...prev, currentLevel: 2 }));
      setProducts(prev => prev.map(p => 
        p.category === 'electronics' ? { ...p, unlocked: true } : p
      ));
      showNotification('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –û—Ç–∫—Ä—ã—Ç —É—Ä–æ–≤–µ–Ω—å "–¢–µ—Ö–Ω–∏–∫–∞"!');
    }
  }, [gameStats.totalSales]);

  const showNotification = (message: string) => {
    setNotification(message);
    setTimeout(() => setNotification(''), 3000);
  };

  const sellProduct = (productId: string) => {
    setProducts(prev => prev.map(product => {
      if (product.id === productId && product.stock > 0) {
        const profit = product.sellPrice - product.buyPrice;
        
        setGameStats(stats => ({
          ...stats,
          totalSales: stats.totalSales + 1,
          totalRevenue: stats.totalRevenue + product.sellPrice,
          money: stats.money + profit,
          experience: stats.experience + Math.floor(profit / 10)
        }));

        showNotification(`–ü—Ä–æ–¥–∞–Ω–æ: ${product.name} (+${profit.toLocaleString()}‚ÇΩ)`);
        
        return { ...product, stock: product.stock - 1 };
      }
      return product;
    }));
  };

  const restockProduct = (productId: string, quantity: number = 10) => {
    const product = products.find(p => p.id === productId);
    if (!product) return;

    const cost = product.buyPrice * quantity;
    if (gameStats.money < cost) {
      showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∑–∞–∫—É–ø–∫–∏!');
      return;
    }

    setProducts(prev => prev.map(p => 
      p.id === productId ? { ...p, stock: p.stock + quantity } : p
    ));
    
    setGameStats(prev => ({ ...prev, money: prev.money - cost }));
    showNotification(`–ó–∞–∫—É–ø–ª–µ–Ω–æ: ${product.name} x${quantity} (-${cost.toLocaleString()}‚ÇΩ)`);
  };

  const availableProducts = products.filter(p => p.unlocked);
  const vegetables = availableProducts.filter(p => p.category === 'vegetables');
  const electronics = availableProducts.filter(p => p.category === 'electronics');

  const progressToNext = Math.min((gameStats.totalSales / 100) * 100, 100);

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-4">
      <div className="max-w-7xl mx-auto space-y-6">
        {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
        {notification && (
          <div className="fixed top-4 right-4 z-50 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg animate-fade-in">
            {notification}
          </div>
        )}

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center space-y-2">
          <h1 className="text-4xl font-bold text-slate-800 flex items-center justify-center gap-3">
            <Icon name="Store" size={40} className="text-blue-600" />
            –°–∏–º—É–ª—è—Ç–æ—Ä –ú–∞–≥–∞–∑–∏–Ω–∞
          </h1>
          <p className="text-slate-600">–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –æ—Ç –æ–≤–æ—â–µ–π –¥–æ —Ç–µ—Ö–Ω–∏–∫–∏</p>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ */}
        <Card className="border-2 border-blue-200 bg-white/80 backdrop-blur">
          <CardHeader className="pb-4">
            <CardTitle className="flex items-center gap-2">
              <Icon name="TrendingUp" size={24} className="text-blue-600" />
              –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
              <div className="text-center p-4 bg-blue-50 rounded-lg">
                <div className="text-2xl font-bold text-blue-600">{gameStats.money.toLocaleString()}‚ÇΩ</div>
                <div className="text-sm text-slate-600">–ë–∞–ª–∞–Ω—Å</div>
              </div>
              <div className="text-center p-4 bg-green-50 rounded-lg">
                <div className="text-2xl font-bold text-green-600">{gameStats.totalSales}</div>
                <div className="text-sm text-slate-600">–ü—Ä–æ–¥–∞–∂</div>
              </div>
              <div className="text-center p-4 bg-purple-50 rounded-lg">
                <div className="text-2xl font-bold text-purple-600">{gameStats.totalRevenue.toLocaleString()}‚ÇΩ</div>
                <div className="text-sm text-slate-600">–û–±–æ—Ä–æ—Ç</div>
              </div>
              <div className="text-center p-4 bg-orange-50 rounded-lg">
                <div className="text-2xl font-bold text-orange-600">–£—Ä–æ–≤–µ–Ω—å {gameStats.currentLevel}</div>
                <div className="text-sm text-slate-600">{gameStats.currentLevel === 1 ? '–û–≤–æ—â–∏' : '–¢–µ—Ö–Ω–∏–∫–∞'}</div>
              </div>
            </div>
            
            {gameStats.currentLevel === 1 && (
              <div className="space-y-2">
                <div className="flex justify-between text-sm">
                  <span>–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —É—Ä–æ–≤–Ω—è "–¢–µ—Ö–Ω–∏–∫–∞"</span>
                  <span>{gameStats.totalSales}/100 –ø—Ä–æ–¥–∞–∂</span>
                </div>
                <Progress value={progressToNext} className="h-3" />
              </div>
            )}
          </CardContent>
        </Card>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å */}
        <Tabs value={selectedTab} onValueChange={setSelectedTab} className="space-y-6">
          <TabsList className="grid w-full grid-cols-4 bg-white/80 backdrop-blur border">
            <TabsTrigger value="shop" className="flex items-center gap-2">
              <Icon name="ShoppingCart" size={18} />
              –¢–æ—Ä–≥–æ–≤–ª—è
            </TabsTrigger>
            <TabsTrigger value="inventory" className="flex items-center gap-2">
              <Icon name="Package" size={18} />
              –°–∫–ª–∞–¥
            </TabsTrigger>
            <TabsTrigger value="purchase" className="flex items-center gap-2">
              <Icon name="ShoppingBag" size={18} />
              –ó–∞–∫—É–ø–∫–∞
            </TabsTrigger>
            <TabsTrigger value="stats" className="flex items-center gap-2">
              <Icon name="BarChart3" size={18} />
              –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            </TabsTrigger>
          </TabsList>

          {/* –¢–æ—Ä–≥–æ–≤–ª—è */}
          <TabsContent value="shop" className="space-y-6">
            <div className="space-y-4">
              <h2 className="text-2xl font-semibold flex items-center gap-2">
                <Icon name="Carrot" size={24} className="text-orange-500" />
                –û–≤–æ—â–∏
              </h2>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                {vegetables.map(product => (
                  <Card key={product.id} className="hover:shadow-lg transition-all duration-200 hover:scale-105">
                    <CardHeader className="text-center pb-2">
                      <div className="text-4xl mb-2">{product.image}</div>
                      <CardTitle className="text-lg">{product.name}</CardTitle>
                      <CardDescription className="text-xs">{product.description}</CardDescription>
                    </CardHeader>
                    <CardContent className="pt-0 space-y-3">
                      <div className="flex justify-between items-center">
                        <span className="text-lg font-bold text-green-600">{product.sellPrice}‚ÇΩ</span>
                        <Badge variant={product.stock > 0 ? 'default' : 'destructive'}>
                          {product.stock > 0 ? `${product.stock} —à—Ç` : '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}
                        </Badge>
                      </div>
                      <Button 
                        onClick={() => sellProduct(product.id)}
                        disabled={product.stock === 0}
                        className="w-full"
                        size="sm"
                      >
                        <Icon name="ShoppingCart" size={16} className="mr-2" />
                        –ü—Ä–æ–¥–∞—Ç—å
                      </Button>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>

            {gameStats.currentLevel >= 2 && (
              <div className="space-y-4">
                <h2 className="text-2xl font-semibold flex items-center gap-2">
                  <Icon name="Smartphone" size={24} className="text-blue-500" />
                  –¢–µ—Ö–Ω–∏–∫–∞
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                  {electronics.map(product => (
                    <Card key={product.id} className="hover:shadow-lg transition-all duration-200 hover:scale-105 border-blue-200">
                      <CardHeader className="text-center pb-2">
                        <div className="text-4xl mb-2">{product.image}</div>
                        <CardTitle className="text-lg">{product.name}</CardTitle>
                        <CardDescription className="text-xs">{product.description}</CardDescription>
                      </CardHeader>
                      <CardContent className="pt-0 space-y-3">
                        <div className="flex justify-between items-center">
                          <span className="text-lg font-bold text-blue-600">{product.sellPrice.toLocaleString()}‚ÇΩ</span>
                          <Badge variant={product.stock > 0 ? 'default' : 'destructive'}>
                            {product.stock > 0 ? `${product.stock} —à—Ç` : '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}
                          </Badge>
                        </div>
                        <Button 
                          onClick={() => sellProduct(product.id)}
                          disabled={product.stock === 0}
                          className="w-full"
                          size="sm"
                        >
                          <Icon name="ShoppingCart" size={16} className="mr-2" />
                          –ü—Ä–æ–¥–∞—Ç—å
                        </Button>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </div>
            )}
          </TabsContent>

          {/* –°–∫–ª–∞–¥ */}
          <TabsContent value="inventory">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Package" size={24} />
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º
                </CardTitle>
                <CardDescription>–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {availableProducts.map(product => (
                    <div key={product.id} className="flex items-center justify-between p-4 border rounded-lg hover:bg-slate-50">
                      <div className="flex items-center gap-4">
                        <span className="text-2xl">{product.image}</span>
                        <div>
                          <div className="font-semibold">{product.name}</div>
                          <div className="text-sm text-slate-600">–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: {product.sellPrice.toLocaleString()}‚ÇΩ</div>
                        </div>
                      </div>
                      <div className="flex items-center gap-4">
                        <Badge variant={product.stock > 5 ? 'default' : product.stock > 0 ? 'secondary' : 'destructive'}>
                          {product.stock} —à—Ç
                        </Badge>
                        <Button 
                          onClick={() => restockProduct(product.id)}
                          size="sm"
                          variant="outline"
                          disabled={gameStats.money < product.buyPrice * 10}
                        >
                          –ü–æ–ø–æ–ª–Ω–∏—Ç—å +10
                        </Button>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* –ó–∞–∫—É–ø–∫–∞ */}
          <TabsContent value="purchase">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="ShoppingBag" size={24} />
                  –ó–∞–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
                </CardTitle>
                <CardDescription>–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø–∞—Å—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {availableProducts.map(product => (
                    <div key={product.id} className="flex items-center justify-between p-4 border rounded-lg">
                      <div className="flex items-center gap-4">
                        <span className="text-2xl">{product.image}</span>
                        <div>
                          <div className="font-semibold">{product.name}</div>
                          <div className="text-sm text-slate-600">
                            –ó–∞–∫—É–ø–æ—á–Ω–∞—è —Ü–µ–Ω–∞: {product.buyPrice.toLocaleString()}‚ÇΩ | 
                            –ü—Ä–∏–±—ã–ª—å: {(product.sellPrice - product.buyPrice).toLocaleString()}‚ÇΩ
                          </div>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <Button 
                          onClick={() => restockProduct(product.id, 5)}
                          size="sm"
                          variant="outline"
                          disabled={gameStats.money < product.buyPrice * 5}
                        >
                          +5 –∑–∞ {(product.buyPrice * 5).toLocaleString()}‚ÇΩ
                        </Button>
                        <Button 
                          onClick={() => restockProduct(product.id, 10)}
                          size="sm"
                          disabled={gameStats.money < product.buyPrice * 10}
                        >
                          +10 –∑–∞ {(product.buyPrice * 10).toLocaleString()}‚ÇΩ
                        </Button>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <TabsContent value="stats">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Icon name="Trophy" size={24} className="text-yellow-500" />
                    –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className={`p-4 rounded-lg border-2 ${gameStats.totalSales >= 10 ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                    <div className="flex items-center gap-3">
                      <span className="text-2xl">üè™</span>
                      <div>
                        <div className="font-semibold">–ü–µ—Ä–≤—ã–µ –ø—Ä–æ–¥–∞–∂–∏</div>
                        <div className="text-sm text-gray-600">–ü—Ä–æ–¥–∞—Ç—å 10 —Ç–æ–≤–∞—Ä–æ–≤</div>
                      </div>
                      {gameStats.totalSales >= 10 && <Icon name="Check" className="text-green-500 ml-auto" size={20} />}
                    </div>
                  </div>
                  
                  <div className={`p-4 rounded-lg border-2 ${gameStats.totalRevenue >= 10000 ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                    <div className="flex items-center gap-3">
                      <span className="text-2xl">üí∞</span>
                      <div>
                        <div className="font-semibold">–ü–µ—Ä–≤–∞—è —Ç—ã—Å—è—á–∞</div>
                        <div className="text-sm text-gray-600">–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å 10,000‚ÇΩ</div>
                      </div>
                      {gameStats.totalRevenue >= 10000 && <Icon name="Check" className="text-green-500 ml-auto" size={20} />}
                    </div>
                  </div>

                  <div className={`p-4 rounded-lg border-2 ${gameStats.currentLevel >= 2 ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                    <div className="flex items-center gap-3">
                      <span className="text-2xl">üì±</span>
                      <div>
                        <div className="font-semibold">–¢–æ—Ä–≥–æ–≤–µ—Ü —Ç–µ—Ö–Ω–∏–∫–æ–π</div>
                        <div className="text-sm text-gray-600">–û—Ç–∫—Ä—ã—Ç—å —É—Ä–æ–≤–µ–Ω—å "–¢–µ—Ö–Ω–∏–∫–∞"</div>
                      </div>
                      {gameStats.currentLevel >= 2 && <Icon name="Check" className="text-green-500 ml-auto" size={20} />}
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Icon name="BarChart3" size={24} className="text-blue-500" />
                    –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="grid grid-cols-2 gap-4">
                    <div className="text-center p-3 bg-blue-50 rounded-lg">
                      <div className="text-xl font-bold text-blue-600">{gameStats.totalSales}</div>
                      <div className="text-xs text-gray-600">–û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏</div>
                    </div>
                    <div className="text-center p-3 bg-green-50 rounded-lg">
                      <div className="text-xl font-bold text-green-600">
                        {gameStats.totalSales > 0 ? Math.round(gameStats.totalRevenue / gameStats.totalSales) : 0}‚ÇΩ
                      </div>
                      <div className="text-xs text-gray-600">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</div>
                    </div>
                    <div className="text-center p-3 bg-purple-50 rounded-lg">
                      <div className="text-xl font-bold text-purple-600">{vegetables.reduce((acc, p) => acc + p.stock, 0)}</div>
                      <div className="text-xs text-gray-600">–û–≤–æ—â–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ</div>
                    </div>
                    <div className="text-center p-3 bg-orange-50 rounded-lg">
                      <div className="text-xl font-bold text-orange-600">{electronics.reduce((acc, p) => acc + p.stock, 0)}</div>
                      <div className="text-xs text-gray-600">–¢–µ—Ö–Ω–∏–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ</div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}